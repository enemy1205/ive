cmake_minimum_required(VERSION 3.2.2)

set(CMAKE_INSTALL_PREFIX "${CMAKE_CURRENT_SOURCE_DIR}/install")
set(CMAKE_BUILD_TYPE "Release")
set(BMTAP2_TARGET_BASENAME cmodel_bm1880v2)
include(cmake/bmtap2.cmake)
set(MIDDLEWARE_TARGET_BASENAME middleware)
include(cmake/middleware.cmake)

set(CMAKE_C_INIT "-fsigned-char -Werror=all -fdiagnostics-color=always -std=gnu++11")
set(CMAKE_CXX_INIT "-fsigned-char -fPIC -Werror=all -fdiagnostics-color=always -Wno-unused-variable -std=gnu++11")
if("${CMAKE_BUILD_TYPE}" STREQUAL "Release")
    set( CMAKE_C_FLAGS "${CMAKE_C_INIT} -O3" )
    set( CMAKE_CXX_FLAGS "${CMAKE_CXX_INIT} -O3" )
elseif("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
    set( CMAKE_C_FLAGS "${CMAKE_C_INIT} -g -O0" )
    set( CMAKE_CXX_FLAGS "${CMAKE_CXX_INIT} -g -O0" )
elseif("${CMAKE_BUILD_TYPE}" STREQUAL "Asan")
    set( CMAKE_C_FLAGS "${CMAKE_C_INIT} -g -O0 -fsanitize=address" )
    set( CMAKE_CXX_FLAGS "${CMAKE_CXX_INIT} -g -O0 -fsanitize=address" )
else()
    message(FATAL_ERROR "No build type!!!")
endif()

find_package(OpenCV REQUIRED)
if("${OpenCV_VERSION}" STREQUAL "3.4.0")
    message("OpenCV version: ${OpenCV_VERSION} found")
    # No need to define since it's in /usr/local/lib
    set(LIBDEP_OPENCV_DIR "")
else()
    message(WARNING "OpenCV version ${OpenCV_VERSION} not match with bmopencv")
endif()

add_subdirectory(tpu_math)
add_subdirectory(src)
add_subdirectory(test)
add_subdirectory(example)